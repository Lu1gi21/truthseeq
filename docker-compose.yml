version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: truthseeq_postgres
    environment:
      POSTGRES_DB: truthseeq
      POSTGRES_USER: truthseeq
      POSTGRES_PASSWORD: dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U truthseeq -d truthseeq"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: truthseeq_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API (optional - you can run this locally)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: truthseeq_backend
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=truthseeq
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=truthseeq
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENVIRONMENT=development
      - DEBUG=true
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: unless-stopped
    profiles:
      - backend

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: truthseeq_network
